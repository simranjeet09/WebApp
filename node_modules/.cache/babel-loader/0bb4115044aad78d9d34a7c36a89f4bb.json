{"ast":null,"code":"var _jsxFileName = \"/Users/simranjeet.dev/Desktop/WebApp/src/pages/weather/Weather.jsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Weather() {\n  _s();\n  const [isLoading, setLoading] = useState(false);\n  useEffect(() => {\n    setLoading(true);\n    const getLocation = () => {\n      if (navigator.geolocation) {\n        navigator.geolocation.getCurrentPosition(getWeatherData, () => {}, {\n          enableHighAccuracy: false,\n          timeout: 5000,\n          maximumAge: Infinity\n        });\n      } else {\n        alert(\"Geolocation is not supported by this browser.\");\n      }\n    };\n    const getWeatherData = async position => {\n      const {\n        latitude,\n        longitude\n      } = position.coords;\n      const data = await axios.get(`https://api.openweathermap.org/data/2.5/weather?lat=${latitude.toFixed(2)}&lon=${longitude.toFixed(2)}&units=metric&appid=7827823101d2b73da072f3788992569f`);\n      setWeatherData(data.data);\n    };\n    getLocation();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"weather\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n}\n_s(Weather, \"LHJkidtbt8bk0SOCXf2Y2viet6g=\");\n_c = Weather;\nvar _c;\n$RefreshReg$(_c, \"Weather\");","map":{"version":3,"names":["React","useEffect","useState","Weather","isLoading","setLoading","getLocation","navigator","geolocation","getCurrentPosition","getWeatherData","enableHighAccuracy","timeout","maximumAge","Infinity","alert","position","latitude","longitude","coords","data","axios","get","toFixed","setWeatherData"],"sources":["/Users/simranjeet.dev/Desktop/WebApp/src/pages/weather/Weather.jsx"],"sourcesContent":["import React from 'react';\nimport { useEffect, useState } from \"react\";\n\nexport default function Weather() {\n    const [isLoading, setLoading] = useState(false);\n    useEffect(() => {\n        setLoading(true)\n        const getLocation = () => {\n            if (navigator.geolocation) {\n                navigator.geolocation.getCurrentPosition(getWeatherData, () => { }, {\n                    enableHighAccuracy: false,\n                    timeout: 5000,\n                    maximumAge: Infinity\n                });\n            } else {\n                alert(\"Geolocation is not supported by this browser.\");\n            }\n        }\n\n        const getWeatherData = async (position) => {\n            const { latitude, longitude } = position.coords\n            const data = await axios.get(`https://api.openweathermap.org/data/2.5/weather?lat=${latitude.toFixed(2)}&lon=${longitude.toFixed(2)}&units=metric&appid=7827823101d2b73da072f3788992569f`)\n            setWeatherData(data.data);\n        }\n        getLocation()\n    }, [])\n  return (\n    <div>weather</div>\n  )\n}\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC;AAE5C,eAAe,SAASC,OAAO,GAAG;EAAA;EAC9B,MAAM,CAACC,SAAS,EAAEC,UAAU,CAAC,GAAGH,QAAQ,CAAC,KAAK,CAAC;EAC/CD,SAAS,CAAC,MAAM;IACZI,UAAU,CAAC,IAAI,CAAC;IAChB,MAAMC,WAAW,GAAG,MAAM;MACtB,IAAIC,SAAS,CAACC,WAAW,EAAE;QACvBD,SAAS,CAACC,WAAW,CAACC,kBAAkB,CAACC,cAAc,EAAE,MAAM,CAAE,CAAC,EAAE;UAChEC,kBAAkB,EAAE,KAAK;UACzBC,OAAO,EAAE,IAAI;UACbC,UAAU,EAAEC;QAChB,CAAC,CAAC;MACN,CAAC,MAAM;QACHC,KAAK,CAAC,+CAA+C,CAAC;MAC1D;IACJ,CAAC;IAED,MAAML,cAAc,GAAG,MAAOM,QAAQ,IAAK;MACvC,MAAM;QAAEC,QAAQ;QAAEC;MAAU,CAAC,GAAGF,QAAQ,CAACG,MAAM;MAC/C,MAAMC,IAAI,GAAG,MAAMC,KAAK,CAACC,GAAG,CAAE,uDAAsDL,QAAQ,CAACM,OAAO,CAAC,CAAC,CAAE,QAAOL,SAAS,CAACK,OAAO,CAAC,CAAC,CAAE,sDAAqD,CAAC;MAC1LC,cAAc,CAACJ,IAAI,CAACA,IAAI,CAAC;IAC7B,CAAC;IACDd,WAAW,EAAE;EACjB,CAAC,EAAE,EAAE,CAAC;EACR,oBACE;IAAA;EAAA;IAAA;IAAA;IAAA;EAAA,QAAkB;AAEtB;AAAC,GA1BuBH,OAAO;AAAA,KAAPA,OAAO;AAAA;AAAA"},"metadata":{},"sourceType":"module"}