{"ast":null,"code":"var _jsxFileName = \"/Users/simranjeet.dev/Desktop/WebApp/src/pages/weather/Weather.jsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport { Slider } from \"@mui/material\";\nimport './weather.css';\nimport axios from 'axios';\nimport LoadingSpinner from \"../../components/loader/loader\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Weather = params => {\n  _s();\n  var _weatherData$main, _weatherData$main2;\n  const [weatherData, setWeatherData] = useState();\n  const [marks, setMarks] = useState([]);\n  const [isLoading, setIsloading] = useState(false);\n  useEffect(() => {\n    setIsloading(true);\n    const getLocation = () => {\n      if (navigator.geolocation) {\n        navigator.geolocation.getCurrentPosition(getWeatherData, () => {}, {\n          enableHighAccuracy: false,\n          timeout: 5000,\n          maximumAge: Infinity\n        });\n      } else {\n        alert(\"Geolocation is not supported by this browser.\");\n      }\n    };\n    const getWeatherData = async position => {\n      const {\n        latitude,\n        longitude\n      } = position.coords;\n      const data = await axios.get(`https://api.openweathermap.org/data/2.5/weather?lat=${latitude.toFixed(2)}&lon=${longitude.toFixed(2)}&units=metric&appid=7827823101d2b73da072f3788992569f`);\n      setWeatherData(data.data);\n    };\n    getLocation();\n  }, []);\n  useEffect(() => {\n    if (weatherData) {\n      setMarks([{\n        value: weatherData.main.temp_min,\n        label: `${weatherData.main.temp_min}°C`\n      }, {\n        value: weatherData.main.temp,\n        label: `${weatherData.main.temp}°C`\n      }, {\n        value: weatherData.main.temp_max,\n        label: `${weatherData.main.temp_max}°C`\n      }]);\n      setIsloading(false);\n    }\n  }, [weatherData]);\n  const valuetext = value => {\n    return `${value}°C`;\n  };\n  return isLoading ? /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"weather-container\",\n    children: /*#__PURE__*/_jsxDEV(LoadingSpinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 60\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 25\n  }, this) : weatherData && /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"weather-content\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"weather-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: `https://openweathermap.org/img/wn/${weatherData === null || weatherData === void 0 ? void 0 : weatherData.weather[0].icon}@2x.png`,\n          alt: \"weahter\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"weather-data\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [\"Weather:\", /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"value\",\n              children: [\" \", weatherData === null || weatherData === void 0 ? void 0 : weatherData.weather[0].main]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 41\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [\"Feel's like:\", /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"value\",\n              children: [weatherData === null || weatherData === void 0 ? void 0 : (_weatherData$main = weatherData.main) === null || _weatherData$main === void 0 ? void 0 : _weatherData$main.feels_like, \"\\xB0C\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 45\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [\"Humidity:\", /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"value\",\n              children: weatherData === null || weatherData === void 0 ? void 0 : (_weatherData$main2 = weatherData.main) === null || _weatherData$main2 === void 0 ? void 0 : _weatherData$main2.humidity\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 42\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 13\n  }, this);\n};\n_s(Weather, \"hmoDQlm1XAs2IkN8XzI2A+7Buw4=\");\n_c = Weather;\nexport default Weather;\nvar _c;\n$RefreshReg$(_c, \"Weather\");","map":{"version":3,"names":["useEffect","useState","Slider","axios","LoadingSpinner","Weather","params","weatherData","setWeatherData","marks","setMarks","isLoading","setIsloading","getLocation","navigator","geolocation","getCurrentPosition","getWeatherData","enableHighAccuracy","timeout","maximumAge","Infinity","alert","position","latitude","longitude","coords","data","get","toFixed","value","main","temp_min","label","temp","temp_max","valuetext","weather","icon","feels_like","humidity"],"sources":["/Users/simranjeet.dev/Desktop/WebApp/src/pages/weather/Weather.jsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport { Slider } from \"@mui/material\";\nimport './weather.css';\nimport axios from 'axios'\nimport LoadingSpinner from \"../../components/loader/loader\";\n\nconst Weather = (params) => {\n    const [weatherData, setWeatherData] = useState()\n    const [marks, setMarks] = useState([])\n    const [isLoading, setIsloading] = useState(false);\n\n    useEffect(() => {\n        setIsloading(true)\n        const getLocation = () => {\n            if (navigator.geolocation) {\n                navigator.geolocation.getCurrentPosition(getWeatherData, () => { }, {\n                    enableHighAccuracy: false,\n                    timeout: 5000,\n                    maximumAge: Infinity\n                });\n            } else {\n                alert(\"Geolocation is not supported by this browser.\");\n            }\n        }\n\n        const getWeatherData = async (position) => {\n            const { latitude, longitude } = position.coords\n            const data = await axios.get(`https://api.openweathermap.org/data/2.5/weather?lat=${latitude.toFixed(2)}&lon=${longitude.toFixed(2)}&units=metric&appid=7827823101d2b73da072f3788992569f`)\n            setWeatherData(data.data);\n        }\n        getLocation()\n    }, [])\n\n    useEffect(() => {\n        if (weatherData) {\n            setMarks([\n                {\n                    value: weatherData.main.temp_min,\n                    label: `${weatherData.main.temp_min}°C`,\n                },\n                {\n                    value: weatherData.main.temp,\n                    label: `${weatherData.main.temp}°C`,\n                },\n                {\n                    value: weatherData.main.temp_max,\n                    label: `${weatherData.main.temp_max}°C`,\n                },\n            ]\n            )\n            setIsloading(false)\n        }\n\n    }, [weatherData])\n\n    const valuetext = (value) => {\n        return `${value}°C`;\n    }\n    return (isLoading ? <div className=\"weather-container\"><LoadingSpinner></LoadingSpinner></div> :\n        (weatherData &&\n            <div className=\"container\">\n                <div className=\"weather-content\" >\n                    <div className=\"weather-info\">\n                    <img src={`https://openweathermap.org/img/wn/${weatherData?.weather[0].icon}@2x.png`} alt=\"weahter\" />\n\n                        <div className=\"weather-data\">\n                            <h3>Weather:<span className=\"value\"> {weatherData?.weather[0].main}</span></h3>\n                            <h3>Feel's like:<span className=\"value\">{weatherData?.main?.feels_like}°C</span></h3>\n                            <h3>Humidity:<span className=\"value\">{weatherData?.main?.humidity}</span></h3>\n                        </div>\n                    </div>\n                    \n                </div>\n            </div>\n        )\n    )\n}\n\nexport default Weather"],"mappings":"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"},"metadata":{},"sourceType":"module"}